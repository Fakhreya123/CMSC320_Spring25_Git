
Q1: Why might we consider using Git?

Answer: Git is a version control system that lets programmers monitor codebase modifications, which helps them better comprehend how the code changes over time.
By enabling developers to work on distinct branches, it promotes feature isolation and keeps the stable version of the code uninterrupted.
Additionally, Git facilitates easy cooperation between developers by allowing each person to work on their own copy of the code while monitoring the contributions of other developers.
Git facilitates efficient review and merging of changes, improving code quality and teamwork.
Git also provides strong capabilities for managing version history, resolving disputes, and facilitating remote cooperation.
Developers can go back to earlier iterations if needed because each commit is tracked with a unique ID.
Teams can work on separate features and then effortlessly integrate them thanks to Git's branching and merging capabilities.
All things considered, Git is a crucial tool for collaboration, code change management, and upholding an organized development process.


Q2: What field could data science be applied to? Give an Example.

Answer: Numerous industries, including marketing, banking, healthcare, and even sports, can benefit from the use of data science. Data scientists can find patterns, forecast outcomes,
and streamline decision-making by utilizing statistical modeling, machine learning, and data analysis. Data science, for instance, can be applied in the healthcare industry to forecast
patient outcomes using past medical records. Data scientists can assist in identifying people who are more susceptible to specific diseases by examining medical histories, patient records,
and lifestyle factors. This enables early intervention and individualized treatment approaches.
This use of data science can result in more effective healthcare systems and better patient care.

Q3: What is the difference between Merging and Rebasing?

Answer: In Git, merging and rebasing are two methods for integrating changes from one branch into another, but they function differently and produce different results.
A new "merge commit" with two parent commits is produced when changes from one branch are combined into another.
This keeps a record of the two branches' merger and retains their histories in their original form.
Because the original branches are still there and their commit history is kept, it is a non-destructive procedure.
When you wish to preserve both branches' whole histories, including the context of each individual commit, you usually employ merging.
In contrast, rebasing "re-applies" the commits from one branch and places them on top of another. As a result, there are no merging commits and the history is linear.
It appears as though the changes in the rebased branch were done immediately on top of the target branch because rebasing basically rewrites the commit history.
Because rebasing modifies commit hashes and may need resolving conflicts, it might be problematic if the branch has been shared with others, even though it can make the history clearer and easier to follow.

In conclusion: The branch history is preserved and a merging commit is produced.
By arranging the commits on top of the target branch, rebasing rewrites history and produces a linear history devoid of merging commits.


Q4: What are you looking forward to this semester?

Answer: I'm excited to learn more about the fundamental ideas of data science this semester in CMSC320.
Applying data manipulation strategies, dealing with actual datasets, and learning how to use analysis tools like Python excite me.
I'm really excited to investigate machine learning models and their potential applications for insights and predictions across a range of domains.
Building practical abilities that I can utilize in my future job will be made possible by the practical projects and the chance to apply these ideas to address real-world issues.
I'm also excited to learn more about the ethical implications of data science, particularly with regard to privacy and equity, since I think these topics are becoming more and more important in the data-driven world of today.

